type TokenSet @entity {
	id: ID!
	set_: Set!
	underlyingSet: Set!
	rebalances: [Rebalance!] @derivedFrom(field: "set_")
}

type Set @entity {
	id: ID!
	address: Bytes!
	name: String!
	symbol: String!
	supply: BigInt!
	components: [Bytes!]
	units: [BigInt!]
	naturalUnit: BigInt!
	issuances: [Issuance!] @derivedFrom(field: "set_")
	redemptions: [Redemption!] @derivedFrom(field: "set_")
}

type Issuance @entity {
	id: ID!
	set_: Set!
	account: Bytes!
	amount: BigInt!
	timestamp: BigInt!
}

type Redemption @entity {
	id: ID!
	set_: Set!
	account: Bytes!
	amount: BigInt!
	timestamp: BigInt!
}

type Transfer @entity {
	id: ID!
	set_: Set!
	from: Bytes!
	to: Bytes!
	value: BigInt!
	timestamp: BigInt!
}

type Rebalance @entity {
	id: ID!
	set_: TokenSet!
	oldSet: Set!
	newSet: Set!
	timestamp: BigInt!
}
